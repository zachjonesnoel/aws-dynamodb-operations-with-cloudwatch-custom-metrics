AWSTemplateFormatVersion: 2010-09-09
Description: eventbridge-invoked-lambda
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  LambdaSize:
    Type: Number
    Default: 1024
    AllowedValues:
    - 256
    - 512
    - 1024
    - 2048
    Description: Lambda iterator memory size (in MB)
Resources:
  Iterator:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that gets triggered from Step Functions..
      Runtime: nodejs14.x
      Handler: src/handlers/step-function-trigger.stepFunctionTrigger
      MemorySize: 128
      Timeout: 100
      Role:
        Fn::GetAtt:
        - IteratorExecutionRole
        - Arn
      CodeUri: Iterator
  DynamoDBQueryAndScan:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DynamoDBQueryAndScanOperations
      Description: A Lambda function that queries DynamoDB and updates CloudWatch
        Custom metrics with the time taken for each DynamoDB operation.
      Runtime: nodejs14.x
      Handler: src/handlers/dynamodb-query-scan.dynamoQueryAndScan
      MemorySize: 128
      Timeout: 100
      Role:
        Fn::GetAtt:
        - DynamoDBQueryAndScanExecutionRole
        - Arn
      CodeUri: DynamoDBQueryAndScan
  DynamoDBQueryAndScanExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AmazonDynamoDBFullAccess
  IteratorExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/CloudWatchFullAccess
      Policies:
      - PolicyName: InvokeLambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::GetAtt:
              - DynamoDBQueryAndScan
              - Arn
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName:
        Fn::Join:
        - ''
        - - LambdaSubMinute
          - Ref: LambdaSize
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"Invoke Lambda every 10 seconds\",\n  \"StartAt\": \"\
          ConfigureCount\",\n  \"States\": {\n    \"ConfigureCount\": {\n      \"\
          Type\": \"Pass\",\n      \"Result\": {\n        \"index\": 0,\n        \"\
          count\": 5000\n      },\n      \"ResultPath\": \"$.iterator\",\n      \"\
          Next\": \"Iterator\"\n    },\n    \"Iterator\": {\n      \"Type\": \"Task\"\
          ,\n      \"Resource\": \"${IteratorArn}\",\n      \"ResultPath\": \"$.iterator\"\
          ,\n      \"Next\": \"IsCountReached\"\n    },\n    \"IsCountReached\": {\n\
          \      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n        \
          \  \"Variable\": \"$.iterator.continue\",\n          \"BooleanEquals\":\
          \ true,\n          \"Next\": \"Wait\"\n        }\n      ],\n      \"Default\"\
          : \"Done\"\n    },\n    \"Wait\": {\n      \"Type\": \"Wait\",\n      \"\
          Seconds\": 1,\n      \"Next\": \"Iterator\"\n    },\n    \"Done\": {\n \
          \     \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}"
        - IteratorArn:
            Fn::GetAtt:
            - Iterator
            - Arn
      RoleArn:
        Fn::GetAtt:
        - StateMachineExecutionRole
        - Arn
  StateMachineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Join:
              - ''
              - - states.
                - Ref: AWS::Region
                - .amazonaws.com
          Action: sts:AssumeRole
      Path: /service-role/
      Policies:
      - PolicyName: StepFunctionsInvokeLambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::GetAtt:
              - Iterator
              - Arn
